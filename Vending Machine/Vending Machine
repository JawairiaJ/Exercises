items_in_stock = [
    {"item_id": 1,"item_name": "Bounty",'item_price': 20,},
    {"item_id": 2,"item_name": "Water",'item_price': 10,},
    {"item_id": 3,"item_name": "Soda",'item_price': 15,},
    {"item_id": 4,"item_name": "Snickers",'item_price': 90,},
    {"item_id": 5, "item_name": "Coke", 'item_price':35,}, ]

the_item = []

reciept = """
\t\tPRODUCT and
 PRICE
"""

sum = 0

run = True
print("\n")
print("~~~ Vending Machine with Python ~~~\n")
print("~~~ The items_in_stock In Stock Are: ~~~\n")

for i in items_in_stock:
    print(f"Item: {i['item_name']} --- Price: {i['item_price']} --- Item: {i['item_id']}")


def machine(items_in_stock, run, the_item):
    while run:
        buy_item = int(input("\nEnter the Item Number of the product you want to buy: "))

        if buy_item < len(items_in_stock):
            the_item.append(items_in_stock[buy_item])
        else: print("Sorry, the item is currently out of stock!")

        added_times = str(input('Please press any key to add more items_in_stock or press "Q" to Quit: '))

        if added_times == "q":
            
            run = False

    rec_bool = int(input(("\t1. Print the reciept?\n\t2. Only print the total sum? ")))
    if rec_bool == 1: print(create_reciept(the_item, reciept))
    elif rec_bool == 2: print(sum(the_item))
    else: print("Invalid Entry.")


def sum(the_item):
    sum = 0

    for i in the_item:
        sum += i["item_price"]

    return sum

def create_reciept(the_item, reciept): #creates a receipt of products

    for i in the_item:
        reciept += f"""
        \t{i["item_name"]} -- {i['item_price']}
        """

    reciept += f"""
        \tTotal --- {sum(the_item)}
        
        
        """
    return reciept 

def get_buy_item(total_money):
    if i in items_in_stock:
        # Get the price of the selected item
        price = items_in_stock[i]['price']
        # Check if the user has enough money
    if total_money >= price:
            # Dispense the selected item
            print('Dispensing ' + items_in_stock[i]['name'] + '...')
            # Update the total money
            total_money -= price
            print('Your total money is ' + str(total_money) + '.')
            # Allow the user to make another buy_item
            get_buy_item(total_money)
    else:
            # Not enough money
            print('Not enough money. Please enter more money or select a different item.')
            # Allow the user to make another buy_item
            get_buy_item(total_money)


if __name__ == "__main__":
    machine(items_in_stock, run, the_item)